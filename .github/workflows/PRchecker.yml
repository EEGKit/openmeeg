name: PR Checker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        #os: [macos-latest, windows-latest, ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set OS name    
      run: |
        if [[ "$os" =~ ^macos* ]]; then
          echo "OS_NAME=macos" >> $GITHUB_ENV
          sudo brew install hdf5 libmatio boost 
        elif [[ "$os" =~ ^windows* ]]; then
          echo "OS_NAME=windows" >> $GITHUB_ENV
        elif [[ "$os" =~ ^ubuntu* ]]; then
          echo "OS_NAME=ubuntu" >> $GITHUB_ENV
          sudo apt-get install libopenblas-dev liblapacke-dev python3-numpy doxygen graphviz libmatio libmatio-dev libvtk-dev lcov
        else
        https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actionsfi
      env:
        os: ${{ matrix.os }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
